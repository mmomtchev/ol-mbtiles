{"version":3,"file":"731.bundle.js","mappings":"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","sources":["webpack://ol-mbtiles/./node_modules/rbush/rbush.min.js","webpack://ol-mbtiles/./node_modules/ol/colorlike.js","webpack://ol-mbtiles/./node_modules/ol/style/IconImage.js","webpack://ol-mbtiles/./node_modules/ol/style/Icon.js","webpack://ol-mbtiles/./node_modules/ol/style/flat.js","webpack://ol-mbtiles/./node_modules/ol/layer/BaseVector.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mbtiles/./node_modules/ol/render/VectorContext.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mbtiles/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mbtiles/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mbtiles/./node_modules/ol/geom/flat/length.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mbtiles/./node_modules/ol/renderer/vector.js","webpack://ol-mbtiles/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mbtiles/./node_modules/ol/layer/VectorTile.js","webpack://ol-mbtiles/./node_modules/ol/style/Circle.js","webpack://ol-mbtiles/./node_modules/ol/style/Fill.js","webpack://ol-mbtiles/./node_modules/ol/style/Image.js","webpack://ol-mbtiles/./node_modules/ol/style/RegularShape.js","webpack://ol-mbtiles/./node_modules/ol/style/Stroke.js","webpack://ol-mbtiles/./node_modules/ol/style/Style.js","webpack://ol-mbtiles/./node_modules/ol/style/Text.js"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.height_ = options.height;\n\n    /**\n     * Recalculate the scale if width or height where given.\n     */\n    if (this.width_ !== undefined || this.height_ !== undefined) {\n      const image = this.getImage(1);\n      const setScale = () => {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      };\n      if (image.width > 0) {\n        this.updateScaleFromWidthAndHeight(this.width_, this.height_);\n      } else {\n        image.addEventListener('load', setScale);\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n      width: this.width_,\n      height: this.height_,\n    });\n  }\n\n  /**\n   * Set the scale of the Icon by calculating it from given width and height and the\n   * width and height of the image.\n   *\n   * @private\n   * @param {number} width The width.\n   * @param {number} height The height.\n   */\n  updateScaleFromWidthAndHeight(width, height) {\n    const image = this.getImage(1);\n    if (width !== undefined && height !== undefined) {\n      super.setScale([width / image.width, height / image.height]);\n    } else if (width !== undefined) {\n      super.setScale([width / image.width, width / image.width]);\n    } else if (height !== undefined) {\n      super.setScale([height / image.height, height / image.height]);\n    } else {\n      super.setScale([1, 1]);\n    }\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels).\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Get the height of the icon (in pixels).\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    return this.height_;\n  }\n\n  /**\n   * Set the width of the icon in pixels.\n   *\n   * @param {number} width The width to set.\n   */\n  setWidth(width) {\n    this.width_ = width;\n    this.updateScaleFromWidthAndHeight(width, this.height_);\n  }\n\n  /**\n   * Set the height of the icon in pixels.\n   *\n   * @param {number} height The height to set.\n   */\n  setHeight(height) {\n    this.height_ = height;\n    this.updateScaleFromWidthAndHeight(this.width_, height);\n  }\n\n  /**\n   * Set the scale and updates the width and height correspondingly.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @override\n   * @api\n   */\n  setScale(scale) {\n    super.setScale(scale);\n    const image = this.getImage(1);\n    if (image) {\n      const widthScale = Array.isArray(scale) ? scale[0] : scale;\n      if (widthScale !== undefined) {\n        this.width_ = widthScale * image.width;\n      }\n      const heightScale = Array.isArray(scale) ? scale[1] : scale;\n      if (heightScale !== undefined) {\n        this.height_ = heightScale * image.height;\n      }\n    }\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `text-placement: 'point'`. For `text-placement: 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `text-placement: 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use \"flat\" style object literals instead of\n   * using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.).  See the documentation\n   * for the [flat style types]{@link module:ol/style/flat~FlatStyle} to see what properties are supported.\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(\n            textState.maxAngle,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (let i = flatOffset; i < flatEnd; i += stride) {\n          coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        const end = coordinates.length;\n        flatOffset = ends[o];\n        this.drawChars_(begin, end);\n        begin = end;\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      this.opacity_,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        state.lineDash,\n        state.lineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if ((align === 'start' || align === 'end') && !rtlRegEx.test(text)) {\n    align = align === 'start' ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image && image.getOpacity() !== 0) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    // `renderMode` must be `'hybrid'` or `'vector'`.\n    assert(renderMode == 'hybrid' || renderMode == 'vector', 28);\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distnce from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n"],"names":["module","exports","t","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","max","floor","min","p","d","x","i","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","m","c","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","asColorLike","color","Array","isArray","taintedTestContext","IconImage","constructor","image","src","size","crossOrigin","imageState","super","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","unlisten_","imageState_","size_","src_","tainted_","initializeImage_","Image","isTainted_","undefined","ImageState","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","dispatchEvent","EventType","handleImageError_","unlistenImage_","handleImageLoad_","width","getImage","pixelRatio","replaceColor_","getPixelRatio","getImageState","getHitDetectionImage","context","fillRect","canvas","getSize","getSrc","bind","document","createElement","ctx","getContext","scale","globalCompositeOperation","fillStyle","Icon","options","opacity","rotation","rotateWithView","displacement","declutterMode","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","imgSize_","imgSize","iconImage_","iconImage","get","offset_","offset","offsetOrigin_","offsetOrigin","origin_","width_","height_","setScale","updateScaleFromWidthAndHeight","addEventListener","clone","getScale","getOpacity","getRotateWithView","getRotation","getDisplacement","getDeclutterMode","getAnchor","getScaleArray","setAnchor","getColor","getImageSize","getOrigin","iconImageSize","getWidth","getHeight","setWidth","setHeight","widthScale","heightScale","listenImageChange","listener","unlistenImageChange","removeEventListener","toStyle","flatStyle","Style","fill","getFill","stroke","getStroke","text","getText","prefix","Fill","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","value","Text","font","maxAngle","offsetX","offsetY","overflow","placement","textAlign","justify","textBaseline","padding","backgroundFill","backgroundStroke","iconSrc","iconImg","shapePoints","RegularShape","points","radius","radius1","radius2","angle","circleRadius","Circle","Property","BaseVectorLayer","Layer","baseOptions","Object","assign","style","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","pixel","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","frameState","declutterTree","getRenderer","setRenderOrder","renderOrder","set","styleLike","len","styles","changed","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","geometry","feature","renderer","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","tolerance","maxExtent","resolution","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinates","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","map","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","ii","appendFlatLineCoordinates","end","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","Relationship","drawCustomCoordinates_","ends","builderEnds","builderEnd","beginGeometry","type","getType","getStride","builderBegin","builderEndss","getOrientedFlatCoordinates","endss","getEndss","myEnds","inflate","getFlatCoordinates","getEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","begin","fillStyleColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","lineWidth","strokeStyleMiterLimit","getMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","matchingChunk","acos","m12","m23","x1","y1","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","start","x2","y2","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","imagePixelRatio_","anchorX_","anchorY_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","declutterMode_","declutterImageWithText_","sharedData","origin","drawFlatCoordinates_","lastStroke","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg","filter","w","keep","saveTextStates_","p0","p1","p2","p3","NaN","getExtent","flatEnd","flatOffset","oo","range","drawChars_","strokeKey","textKey","fillKey","baseline","strokeWidth","abs","textFillStyle","textStrokeStyle","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","join","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","toString","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentLength","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","endX","endY","flat","PI","result","singleSegment","previousAngle","atan2","y","replace","delta","iStart","charLength","chars","substring","lineStringLength","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","String","fromCharCode","horizontalTextAlign","align","test","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","key","textIsArray","chunks","split","reduce","widths","heights","lineWidths","renderWidth","contextInstructions","label","leftRight","strokeInstructions","fillInstructions","previousFont","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","transform","round","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","save","translate","rotate","restore","setLineDash","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","getGeometry","dx","dy","arc","closePath","fn","coords","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","index","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","cc","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","clearRect","indexes","maxDistanceSq","distances","j","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","includes","idx","zs","keys","Number","executor","isEmpty","builderTypes","jj","squaredTolerance","userTransform","context_","extent_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","globalAlpha","setTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","getGeometryFunction","geometries","getGeometriesArray","simplifyTransformed","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","getZIndex","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loading","simplifiedGeometry","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","getGeometries","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","layer","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","tile","projection","render","getState","TileState","updateExecutorGroup_","tileImageNeedsRender_","getTile","z","viewState","getLayer","getSource","viewHints","hifi","ViewHint","wantedResolution","Date","now","time","getRenderMode","renderTileImage_","isDrawableTile","executorGroups","hasContext","getTileImage","prepareFrame","layerRevision","getRevision","renderedTiles","revision","builderState","getReplayState","dirty","renderedResolution","renderedRevision","renderedRenderOrder","source","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","tileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","styleFunction","features","executorGroupInstructions","replayExtent","renderingReplayGroup","getOverlaps","declutterExecutorGroup","matches","tileGrid","getId","match","lastIndexOf","found","some","item","executorGroup","Promise","resolve","reject","renderedProjection","projectionExtent","getTileCoordForCoordAndResolution","getWrapX","canWrapX","loadingSourceTiles","corner","tilePixel","accumulator","concat","tileSize","getTileSize","getZForResolution","zDirection","transforms","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","setColor","setText","imgContext","setImage","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","k","kk","createHitDetectionImageData","getRenderTransform","getTileCoordCenter","resultFeatures","g","hitDetect","handleFontsChanged","getVisible","event","renderIfReadyAndVisible","tiles","getTileRenderTransform","center","worldOffset","inversePixelTransform","postRender","pixelToCoordinateTransform","renderMode","replayTypes","tileSource","clips","clipZs","ready","group","currentZ","contextSaved","currentClip","replayState","renderedTileResolution","renderedTileRevision","tileResolution","getResolution","renderPixelRatio","getTilePixelSize","renderScale","pixelScale","BaseVector","preload","useInterimTilesOnError","on","once","un","renderMode_","setPreload","setUseInterimTilesOnError","getBackground","setBackground","createRenderer","getPreload","TileProperty","getUseInterimTilesOnError","CircleStyle","Infinity","getRadius","setOpacity","setRadius","radius_","ImageStyle","scaleArray_","displacement_","setDisplacement","setRotateWithView","setRotation","hitDetectionCanvas_","points_","radius2_","angle_","stroke_","renderOptions_","getPoints","getRadius2","getAngle","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","r1","r2","tmp","sin","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","add","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","step","angle0","radiusC","cos","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer_","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","setZIndex","toFunction","obj","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundStroke_","padding_","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding"],"sourceRoot":""}