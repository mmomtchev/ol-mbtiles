{"version":3,"file":"957.bundle.js","mappings":"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","sources":["webpack://ol-mbtiles/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mbtiles/./node_modules/ol/render/VectorContext.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mbtiles/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mbtiles/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mbtiles/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mbtiles/./node_modules/ol/renderer/vector.js","webpack://ol-mbtiles/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mbtiles/./node_modules/ol/layer/VectorTile.js"],"sourcesContent":["/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup, {\n  DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default<import('../../source/VectorTile.js').default<import('../../Feature.js').FeatureLike>>>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   * @param {import(\"./TileLayer.js\").Options} options Options.\n   */\n  constructor(layer, options) {\n    super(layer, options);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedOpacity_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<ZIndexContext>}\n     */\n    this.tileClipContexts_ = null;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @override\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    this.updateExecutorGroup_(\n      tile,\n      frameState.pixelRatio,\n      frameState.viewState.projection,\n    );\n    if (this.tileImageNeedsRender_(tile)) {\n      this.renderTileImage_(tile, frameState);\n    }\n    super.drawTile(tile, frameState, x, y, w, h, gutter, transition);\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @override\n   */\n  getTile(z, x, y, frameState) {\n    const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n      this.getOrCreateTile(z, x, y, frameState)\n    );\n    if (!tile) {\n      return null;\n    }\n\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    return tile;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = !!layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tempExtent,\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        sharedExtent,\n        resolution,\n        pixelRatio,\n      );\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio,\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @param {number} [index] Render order index.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature, index) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutter,\n            index,\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature, i);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer(),\n        true,\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutter = layer.getDeclutter();\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures = declutter\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures,\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice(),\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution,\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile.getSourceTiles().reduce(function (\n        accumulator,\n        sourceTile,\n      ) {\n        return accumulator.concat(sourceTile.getFeatures());\n      }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection),\n          ),\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0,\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation,\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @return {Array<import('../../Feature.js').FeatureLike>} Features.\n   */\n  getFeaturesInExtent(extent) {\n    const features = [];\n    const tileCache = this.getTileCache();\n    if (tileCache.getCount() === 0) {\n      return features;\n    }\n    const tileGrid = this.getLayer().getSource().tileGrid;\n    const z = tileGrid.getZForResolution(this.renderedResolution);\n    tileCache.forEach((tile) => {\n      if (tile.tileCoord[0] !== z || tile.getState() !== TileState.LOADED) {\n        return;\n      }\n      const sourceTiles = tile.getSourceTiles();\n      for (let i = 0, ii = sourceTiles.length; i < ii; ++i) {\n        const sourceTile = sourceTiles[i];\n        const tileCoord = sourceTile.tileCoord;\n        if (intersects(extent, tileGrid.getTileCoordExtent(tileCoord))) {\n          const tileFeatures = sourceTile.getFeatures();\n          if (tileFeatures) {\n            for (let j = 0, jj = tileFeatures.length; j < jj; ++j) {\n              const candidate = tileFeatures[j];\n              const geometry = candidate.getGeometry();\n              if (intersects(extent, geometry.getExtent())) {\n                features.push(candidate);\n              }\n            }\n          }\n        }\n      }\n    });\n    return features;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layerState.opacity;\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const executorGroups = tile.executorGroups[getUid(this.getLayer())];\n      const declutter = this.getLayer().getDeclutter();\n      if (executorGroups) {\n        for (let j = executorGroups.length - 1; j >= 0; --j) {\n          executorGroups[j].execute(\n            this.context,\n            [this.context.canvas.width, this.context.canvas.height],\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            DECLUTTER,\n            declutter ? frameState.declutter[declutter] : undefined,\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    const executorGroups = tiles.reduce((acc, tile, index) => {\n      tile.executorGroups[getUid(this.getLayer())].forEach((executorGroup) =>\n        acc.push({\n          executorGroup,\n          index,\n        }),\n      );\n      return acc;\n    }, []);\n\n    const executorGroupZIndexContexts = executorGroups.map(({executorGroup}) =>\n      executorGroup.getDeferredZIndexContexts(),\n    );\n    const usedZIndices = {};\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroupZindexContext =\n        executorGroups[i].executorGroup.getDeferredZIndexContexts();\n      for (const key in executorGroupZindexContext) {\n        usedZIndices[key] = true;\n      }\n    }\n    const zIndexKeys = Object.keys(usedZIndices).sort(ascending);\n    zIndexKeys.map(Number).forEach((zIndex) => {\n      executorGroupZIndexContexts.forEach((zIndexContexts, i) => {\n        if (!zIndexContexts[zIndex]) {\n          return;\n        }\n        zIndexContexts[zIndex].forEach((zIndexContext) => {\n          const {executorGroup, index} = executorGroups[i];\n          const context = executorGroup.getRenderedContext();\n          const alpha = context.globalAlpha;\n          context.globalAlpha = this.renderedOpacity_;\n          const tileClipContext = this.tileClipContexts_[index];\n          if (tileClipContext) {\n            tileClipContext.draw(context);\n          }\n          zIndexContext.draw(context);\n          if (tileClipContext) {\n            context.restore();\n          }\n          context.globalAlpha = alpha;\n          zIndexContext.clear();\n        });\n        zIndexContexts[zIndex].length = 0;\n      });\n    });\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection,\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tempExtent)[0] -\n      tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset,\n      ),\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n    this.renderedOpacity_ =\n      frameState.layerStatesArray[frameState.layerIndex].opacity;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.renderedOpacity_;\n    const declutter = layer.getDeclutter();\n    const replayTypes = declutter\n      ? VECTOR_REPLAYS[renderMode].filter((type) => !DECLUTTER.includes(type))\n      : VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection,\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    const tileClipContexts = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes),\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      let clipContext = context;\n      let tileClipContext;\n      if (currentClip) {\n        tileClipContext = new ZIndexContext();\n        clipContext = tileClipContext.getContext();\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                clipContext.save();\n                contextSaved = true;\n              }\n              clipContext.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              clipContext.moveTo(currentClip[0], currentClip[1]);\n              clipContext.lineTo(currentClip[2], currentClip[3]);\n              clipContext.lineTo(currentClip[4], currentClip[5]);\n              clipContext.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              clipContext.moveTo(clip[6], clip[7]);\n              clipContext.lineTo(clip[4], clip[5]);\n              clipContext.lineTo(clip[2], clip[3]);\n              clipContext.lineTo(clip[0], clip[1]);\n              clipContext.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          [context.canvas.width, context.canvas.height],\n          transform,\n          rotation,\n          hifi,\n          replayTypes,\n          frameState.declutter?.[declutter],\n        );\n      }\n      if (contextSaved) {\n        if (clipContext === context) {\n          clipContext.restore();\n        } else {\n          tileClipContexts[i] = tileClipContext;\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n    this.tileClipContexts_ = tileClipContexts;\n    if (!frameState.declutter) {\n      this.renderDeferredInternal(frameState);\n    }\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext();\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio),\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tempExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        [\n          context.canvas.width * renderScale,\n          context.canvas.height * renderScale,\n        ],\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()],\n        null,\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/VectorTile.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views, but get lifted above all polygon and line elements.\n *  * `'vector'`: Everything is rendered as vectors and the original render order is maintained. Use\n *    this mode for improved performance and visual epxerience on vector tile layers with not too many\n *    rendered features (e.g. for highlighting a subset of features of another layer with the same\n *    source).\n * @property {VectorTileSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=0] The internal tile cache size.  If too small, this will auto-grow to hold\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/VectorTile.js\").default<FeatureType>} [VectorTileSourceType=import(\"../source/VectorTile.js\").default<*>]\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=ExtractedFeatureType<VectorTileSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorTileSourceType, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorTileSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.preload;\n    const cacheSize = options.cacheSize === undefined ? 0 : options.cacheSize;\n    delete options.cacheSize;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(baseOptions);\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\",\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this, {\n      cacheSize: this.cacheSize_,\n    });\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * Get features whose bounding box intersects the provided extent. Only features for cached\n   * tiles for the last rendered zoom level are available in the source. So this method is only\n   * suitable for requesting tiles for extents that are currently rendered.\n   *\n   * Features are returned in random tile order and as they are included in the tiles. This means\n   * they can be clipped, duplicated across tiles, and simplified to the render resolution.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    return /** @type {Array<FeatureType>} */ (\n      /** @type {*} */ (this.getRenderer().getFeaturesInExtent(extent))\n    );\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n"],"names":["Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","geometry","feature","renderer","hitDetectionRenderer","index","drawGeometry","setStyle","style","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","constructor","tolerance","maxExtent","resolution","pixelRatio","super","this","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinates","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","map","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","length","i","ii","appendFlatLineCoordinates","offset","end","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","Relationship","INTERSECTING","drawCustomCoordinates_","ends","builderEnds","builderEnd","push","beginGeometry","type","getType","getStride","builderBegin","builderEndss","getOrientedFlatCoordinates","endss","getEndss","myEnds","inflate","getFlatCoordinates","getEnds","undefined","endGeometry","finish","reverseHitDetectionInstructions","reverse","n","instruction","begin","fillStyleColor","getColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","getLineCap","lineCap","strokeStyleLineDash","getLineDash","lineDash","slice","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","lineJoin","strokeStyleWidth","getWidth","lineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","width","drawFlatCoordinatess_","fill","stroke","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","x1","y1","x2","y2","segmentLength","Math","sqrt","m","x","y","missing","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","start","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","hitDetectionImage_","image_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","declutterMode_","declutterImageWithText_","ceil","filteredFlatCoordinates","sharedData","anchor","getAnchor","size","getSize","origin","getOrigin","getPixelRatio","getHitDetectionImage","getImage","getOpacity","getRotateWithView","getRotation","getScaleArray","getDeclutterMode","drawFlatCoordinates_","lastStroke","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","placement","geometryWidths","overflow","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg","filter","w","keep","saveTextStates_","backgroundFill","backgroundStroke","padding","scale","p0","p1","p2","p3","NaN","p","getExtent","repeat","textAlign","flatOffset","o","oo","c","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","font","justify","textBaseline","fillKey","baseline","offsetY","text","strokeWidth","abs","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","join","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","toString","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","cache","rotation","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","endX","endY","flat","PI","result","singleSegment","previousAngle","atan2","replace","angle","delta","iStart","charLength","len","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","String","fromCharCode","horizontalTextAlign","align","test","createTextChunks","acc","line","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","ZIndexContext","getZIndexContext","createLabel","key","Array","isArray","split","reduce","height","widths","heights","lineWidths","renderWidth","contextInstructions","h","label","floor","leftRight","strokeInstructions","fillInstructions","previousFont","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","max","fillStrokeArgs","prototype","apply","replayTextBackground_","context","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","transform","min","round","drawImageX","drawImageY","drawImageW","drawImageH","minX","minY","maxX","maxY","value","canvasTransform","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","opacity","box","strokePadding","alignAndScale","repeatSize","save","translate","rotate","restore","setLineDash","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","dd","declutterMode","prevX","prevY","roundX","roundY","image","d","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","getGeometry","dx","dy","r","arc","closePath","fn","coords","rotateWithView","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","collides","render","insert","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","load","execute","executeHitDetection","canvas","ALL","DECLUTTER","includes","circlePixelIndexArrayCache","allInstructions","renderBuffer","overlaps_","renderBuffer_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","willReadFrequently","clearRect","indexes","radius","maxDistanceSq","distances","j","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","getImageData","data","idx","zs","Object","keys","Number","executor","sort","isEmpty","targetContext","builderTypes","maxBuilderTypes","jj","getContext","requireClip","pushFunction","getDeferredZIndexContexts","getRenderedContext","renderDeferred","deferredZIndexContexts","forEach","draw","clear","squaredTolerance","userTransform","context_","extent_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","globalAlpha","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simplifyTransformed","setTransform","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","t","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","declutter","hasText","getImageState","ImageState","LOADED","imageReplay","getZIndex","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","listener","loadingPromises","loading","imageState","ERROR","IDLE","ready","Promise","all","then","simplifiedGeometry","getRenderer","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","getGeometries","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","layer","options","boundHandleStyleImageChange_","handleStyleImageChange_","bind","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","renderedOpacity_","tmpTransform_","tileClipContexts_","drawTile","tile","frameState","gutter","transition","updateExecutorGroup_","viewState","projection","tileImageNeedsRender_","renderTileImage_","getTile","z","getOrCreateTile","viewHints","ViewHint","ANIMATING","INTERACTING","wantedResolution","prepareFrame","layerRevision","getLayer","getRevision","renderedTiles","revision","renderOrder","getRenderOrder","builderState","getReplayState","dirty","renderedResolution","renderedRevision","renderedRenderOrder","source","getSource","getDeclutter","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","executorGroups","tt","sourceTile","getState","TileState","sourceTileCoord","tileCoord","sourceTileExtent","sharedExtent","builderExtent","getRenderBuffer","tempExtent","bufferedExtent","styles","styleFunction","getStyleFunction","features","getFeatures","executorGroupInstructions","replayExtent","getRenderMode","renderingReplayGroup","getOverlaps","matches","tileGrid","getId","match","splice","lastIndexOf","found","some","item","executorGroup","pixel","resolve","reject","renderedProjection","projectionExtent","getTileCoordForCoordAndResolution","getWrapX","canWrapX","loadingSourceTiles","corner","tilePixel","accumulator","concat","tileSize","getTileSize","getZForResolution","zDirection","transforms","userExtent","imageSmoothingEnabled","createHitDetectionImageData","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","color","padStart","originalStyle","clone","setColor","setText","imgSize","getImageSize","imgContext","img","fillRect","setImage","Icon","anchorXUnits","anchorYUnits","getScale","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","k","kk","getRenderTransform","getTileCoordCenter","resultFeatures","g","hitDetect","getFeaturesInExtent","tileCache","getTileCache","getCount","tileFeatures","candidate","handleFontsChanged","getVisible","changed","event","renderIfReadyAndVisible","renderDeclutter","layerState","hifi","tiles","getTileRenderTransform","renderDeferredInternal","executorGroupZIndexContexts","usedZIndices","executorGroupZindexContext","zIndexContexts","tileClipContext","center","worldOffset","inversePixelTransform","postRender","pixelToCoordinateTransform","layerStatesArray","layerIndex","renderMode","replayTypes","tileSource","clips","clipZs","tileClipContexts","group","currentZ","contextSaved","currentClip","clipContext","replayState","renderedTileResolution","renderedTileRevision","tileResolution","getResolution","renderPixelRatio","getTilePixelSize","renderScale","pixelScale","VectorTileLayer","BaseVector","baseOptions","assign","preload","cacheSize","useInterimTilesOnError","on","once","un","cacheSize_","renderMode_","setPreload","setUseInterimTilesOnError","getBackground","setBackground","createRenderer","getPreload","get","TileProperty","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","set"],"sourceRoot":""}