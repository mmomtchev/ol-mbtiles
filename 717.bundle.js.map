{"version":3,"file":"717.bundle.js","mappings":"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","sources":["webpack://ol-mbtiles/./node_modules/rbush/rbush.min.js","webpack://ol-mbtiles/./node_modules/ol/colorlike.js","webpack://ol-mbtiles/./node_modules/ol/style/IconImage.js","webpack://ol-mbtiles/./node_modules/ol/style/Icon.js","webpack://ol-mbtiles/./node_modules/ol/expr/expression.js","webpack://ol-mbtiles/./node_modules/ol/expr/cpu.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/style.js","webpack://ol-mbtiles/./node_modules/ol/layer/BaseVector.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Instruction.js","webpack://ol-mbtiles/./node_modules/ol/render/VectorContext.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Builder.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://ol-mbtiles/./node_modules/ol/geom/flat/linechunk.js","webpack://ol-mbtiles/./node_modules/ol/geom/flat/straightchunk.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/TextBuilder.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://ol-mbtiles/./node_modules/ol/geom/flat/textpath.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Executor.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/Immediate.js","webpack://ol-mbtiles/./node_modules/ol/render/canvas/hitdetect.js","webpack://ol-mbtiles/./node_modules/ol/renderer/vector.js","webpack://ol-mbtiles/./node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://ol-mbtiles/./node_modules/ol/layer/VectorTile.js","webpack://ol-mbtiles/./node_modules/ol/style/Circle.js","webpack://ol-mbtiles/./node_modules/ol/style/Fill.js","webpack://ol-mbtiles/./node_modules/ol/style/Image.js","webpack://ol-mbtiles/./node_modules/ol/style/RegularShape.js","webpack://ol-mbtiles/./node_modules/ol/style/Stroke.js","webpack://ol-mbtiles/./node_modules/ol/style/Style.js","webpack://ol-mbtiles/./node_modules/ol/style/Text.js"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap} image Image.\n * @param {string} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image instanceof HTMLImageElement ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time'\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided'\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`'\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if (image instanceof HTMLImageElement) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * The following operators can be used:\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels.\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection\n *   * `['resolution']` returns the current resolution\n *   * `['time']` returns the time in seconds since the creation of the layer\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` returns the current zoom level\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4.\n *   * `['color', red, green, blue, alpha]` creates a `color` value from `number` values; the `alpha` parameter is\n *     optional; if not specified, it will be set to 1.\n *     Note: `red`, `green` and `blue` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range).\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          )\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType)\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType)\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 3 || parsedArgs.length === 4\n        ? NumberArrayType | ColorType\n        : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(3, 4),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType)\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type\n      )} but the following type was expected: ${typeName(typeHint)}`\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount\n      )} instead`\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType\n      )} for the interpolate operation` + `, got ${typeName(inputType)} instead`\n    );\n  }\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded)\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type\n      )} instead`\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type\n        )} instead`\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded\n          )}`\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded\n        )}`\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (expression) => expression.featureId;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.GeometryType\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Between\n    // Ops.Case\n    // Ops.In\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle)\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'fill-color',\n    context\n  );\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context\n  );\n\n  const text = new Text({});\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align'\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline'\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units'\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units'\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(flatStyle, prefix + 'declutter');\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const radius = optionalNumber(flatStyle, prefix + 'radius');\n  const radius1 = optionalNumber(flatStyle, prefix + 'radius1');\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius1,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode'\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport CanvasTileLayerRenderer from './TileLayer.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n  multiply,\n  reset as resetTransform,\n  scale,\n  scale as scaleTransform,\n  translate as translateTransform,\n} from '../../transform.js';\nimport {\n  boundingExtent,\n  buffer,\n  containsExtent,\n  equals,\n  getIntersection,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\nimport {wrapX} from '../../coordinate.js';\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst IMAGE_REPLAYS = {\n  'image': ['Polygon', 'Circle', 'LineString', 'Image', 'Text'],\n  'hybrid': ['Polygon', 'LineString'],\n  'vector': [],\n};\n\n/**\n * @type {!Object<string, Array<import(\"../../render/canvas.js\").BuilderType>>}\n */\nconst VECTOR_REPLAYS = {\n  'hybrid': ['Image', 'Text', 'Default'],\n  'vector': ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'],\n};\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n * @extends {CanvasTileLayerRenderer<import(\"../../layer/VectorTile.js\").default>}\n */\nclass CanvasVectorTileLayerRenderer extends CanvasTileLayerRenderer {\n  /**\n   * @param {import(\"../../layer/VectorTile.js\").default} layer VectorTile layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform\").Transform}\n     */\n    this.renderedPixelToCoordinateTransform_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpTransform_ = createTransform();\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection\").default} projection Projection.\n   * @return {boolean|undefined} Tile needs to be rendered.\n   */\n  prepareTile(tile, pixelRatio, projection) {\n    let render;\n    const state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR) {\n      this.updateExecutorGroup_(tile, pixelRatio, projection);\n      if (this.tileImageNeedsRender_(tile)) {\n        render = true;\n      }\n    }\n    return render;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const layer = this.getLayer();\n    const tile = layer.getSource().getTile(z, x, y, pixelRatio, projection);\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    if (hifi || !tile.wantedResolution) {\n      tile.wantedResolution = resolution;\n    }\n    const render = this.prepareTile(tile, pixelRatio, projection);\n    if (\n      render &&\n      (hifi || Date.now() - frameState.time < 8) &&\n      layer.getRenderMode() !== 'vector'\n    ) {\n      this.renderTileImage_(tile, frameState);\n    }\n    return super.getTile(z, x, y, frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const layer = this.getLayer();\n    return (\n      super.isDrawableTile(tile) &&\n      (layer.getRenderMode() === 'vector'\n        ? getUid(layer) in tile.executorGroups\n        : tile.hasContext(layer))\n    );\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileImage(tile) {\n    return tile.getImage(this.getLayer());\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const layerRevision = this.getLayer().getRevision();\n    if (this.renderedLayerRevision_ !== layerRevision) {\n      this.renderedLayerRevision_ = layerRevision;\n      this.renderedTiles.length = 0;\n    }\n    return super.prepareFrame(frameState);\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @private\n   */\n  updateExecutorGroup_(tile, pixelRatio, projection) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const revision = layer.getRevision();\n    const renderOrder = layer.getRenderOrder() || null;\n\n    const resolution = tile.wantedResolution;\n    const builderState = tile.getReplayState(layer);\n    if (\n      !builderState.dirty &&\n      builderState.renderedResolution === resolution &&\n      builderState.renderedRevision == revision &&\n      builderState.renderedRenderOrder == renderOrder\n    ) {\n      return;\n    }\n\n    const source = layer.getSource();\n    const declutter = layer.getDeclutter();\n    const sourceTileGrid = source.getTileGrid();\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n\n    const sourceTiles = source.getSourceTiles(pixelRatio, projection, tile);\n    const layerUid = getUid(layer);\n    delete tile.hitDetectionImageData[layerUid];\n    tile.executorGroups[layerUid] = [];\n    if (declutter) {\n      tile.declutterExecutorGroups[layerUid] = [];\n    }\n    builderState.dirty = false;\n    for (let t = 0, tt = sourceTiles.length; t < tt; ++t) {\n      const sourceTile = sourceTiles[t];\n      if (sourceTile.getState() != TileState.LOADED) {\n        continue;\n      }\n      const sourceTileCoord = sourceTile.tileCoord;\n      const sourceTileExtent =\n        sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      const sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      const builderExtent = buffer(\n        sharedExtent,\n        layer.getRenderBuffer() * resolution,\n        this.tmpExtent\n      );\n      const bufferedExtent = equals(sourceTileExtent, sharedExtent)\n        ? null\n        : builderExtent;\n      const builderGroup = new CanvasBuilderGroup(\n        0,\n        builderExtent,\n        resolution,\n        pixelRatio\n      );\n      const declutterBuilderGroup = declutter\n        ? new CanvasBuilderGroup(0, sharedExtent, resolution, pixelRatio)\n        : undefined;\n      const squaredTolerance = getSquaredRenderTolerance(\n        resolution,\n        pixelRatio\n      );\n\n      /**\n       * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n       * @this {CanvasVectorTileLayerRenderer}\n       */\n      const render = function (feature) {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            builderGroup,\n            declutterBuilderGroup\n          );\n          builderState.dirty = builderState.dirty || dirty;\n        }\n      };\n\n      const features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== builderState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (let i = 0, ii = features.length; i < ii; ++i) {\n        const feature = features[i];\n        if (\n          !bufferedExtent ||\n          intersects(bufferedExtent, feature.getGeometry().getExtent())\n        ) {\n          render.call(this, feature);\n        }\n      }\n      const executorGroupInstructions = builderGroup.finish();\n      // no need to clip when the render tile is covered by a single source tile\n      const replayExtent =\n        layer.getRenderMode() !== 'vector' &&\n        declutter &&\n        sourceTiles.length === 1\n          ? null\n          : sharedExtent;\n      const renderingReplayGroup = new CanvasExecutorGroup(\n        replayExtent,\n        resolution,\n        pixelRatio,\n        source.getOverlaps(),\n        executorGroupInstructions,\n        layer.getRenderBuffer()\n      );\n      tile.executorGroups[layerUid].push(renderingReplayGroup);\n      if (declutterBuilderGroup) {\n        const declutterExecutorGroup = new CanvasExecutorGroup(\n          null,\n          resolution,\n          pixelRatio,\n          source.getOverlaps(),\n          declutterBuilderGroup.finish(),\n          layer.getRenderBuffer()\n        );\n        tile.declutterExecutorGroups[layerUid].push(declutterExecutorGroup);\n      }\n    }\n    builderState.renderedRevision = revision;\n    builderState.renderedRenderOrder = renderOrder;\n    builderState.renderedResolution = resolution;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n\n    const hitExtent = boundingExtent([coordinate]);\n    buffer(hitExtent, resolution * hitTolerance, hitExtent);\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position.\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      let key = feature.getId();\n      if (key === undefined) {\n        key = getUid(feature);\n      }\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const renderedTiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n\n    let found;\n    for (let i = 0, ii = renderedTiles.length; !found && i < ii; ++i) {\n      const tile = renderedTiles[i];\n      const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      if (!intersects(tileExtent, hitExtent)) {\n        continue;\n      }\n\n      const layerUid = getUid(layer);\n      const executorGroups = [tile.executorGroups[layerUid]];\n      const declutterExecutorGroups = tile.declutterExecutorGroups[layerUid];\n      if (declutterExecutorGroups) {\n        executorGroups.push(declutterExecutorGroups);\n      }\n      executorGroups.some((executorGroups) => {\n        const declutteredFeatures =\n          executorGroups === declutterExecutorGroups\n            ? frameState.declutterTree.all().map((item) => item.value)\n            : null;\n        for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n          const executorGroup = executorGroups[t];\n          found = executorGroup.forEachFeatureAtCoordinate(\n            coordinate,\n            resolution,\n            rotation,\n            hitTolerance,\n            featureCallback,\n            declutteredFeatures\n          );\n          if (found) {\n            return true;\n          }\n        }\n      });\n    }\n    return found;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature.js\").FeatureLike>>} Promise that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve, reject) => {\n      const layer = this.getLayer();\n      const layerUid = getUid(layer);\n      const source = layer.getSource();\n      const projection = this.renderedProjection;\n      const projectionExtent = projection.getExtent();\n      const resolution = this.renderedResolution;\n      const tileGrid = source.getTileGridForProjection(projection);\n      const coordinate = applyTransform(\n        this.renderedPixelToCoordinateTransform_,\n        pixel.slice()\n      );\n      const tileCoord = tileGrid.getTileCoordForCoordAndResolution(\n        coordinate,\n        resolution\n      );\n      /** @type {import(\"../../VectorRenderTile.js\").default|undefined} */\n      let tile;\n      for (let i = 0, ii = this.renderedTiles.length; i < ii; ++i) {\n        if (\n          tileCoord.toString() === this.renderedTiles[i].tileCoord.toString()\n        ) {\n          tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n            this.renderedTiles[i]\n          );\n          if (tile.getState() === TileState.LOADED) {\n            const extent = tileGrid.getTileCoordExtent(tile.tileCoord);\n            if (\n              source.getWrapX() &&\n              projection.canWrapX() &&\n              !containsExtent(projectionExtent, extent)\n            ) {\n              wrapX(coordinate, projection);\n            }\n            break;\n          }\n          tile = undefined;\n        }\n      }\n      if (!tile || tile.loadingSourceTiles > 0) {\n        resolve([]);\n        return;\n      }\n      const extent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n      const corner = getTopLeft(extent);\n      const tilePixel = [\n        (coordinate[0] - corner[0]) / resolution,\n        (corner[1] - coordinate[1]) / resolution,\n      ];\n      /** @type {Array<import(\"../../Feature.js\").FeatureLike>} */\n      const features = tile\n        .getSourceTiles()\n        .reduce(function (accumulator, sourceTile) {\n          return accumulator.concat(sourceTile.getFeatures());\n        }, []);\n      /** @type {ImageData|undefined} */\n      let hitDetectionImageData = tile.hitDetectionImageData[layerUid];\n      if (!hitDetectionImageData) {\n        const tileSize = toSize(\n          tileGrid.getTileSize(\n            tileGrid.getZForResolution(resolution, source.zDirection)\n          )\n        );\n        const rotation = this.renderedRotation_;\n        const transforms = [\n          this.getRenderTransform(\n            tileGrid.getTileCoordCenter(tile.wrappedTileCoord),\n            resolution,\n            0,\n            HIT_DETECT_RESOLUTION,\n            tileSize[0] * HIT_DETECT_RESOLUTION,\n            tileSize[1] * HIT_DETECT_RESOLUTION,\n            0\n          ),\n        ];\n        hitDetectionImageData = createHitDetectionImageData(\n          tileSize,\n          transforms,\n          features,\n          layer.getStyleFunction(),\n          tileGrid.getTileCoordExtent(tile.wrappedTileCoord),\n          tile.getReplayState(layer).renderedResolution,\n          rotation\n        );\n        tile.hitDetectionImageData[layerUid] = hitDetectionImageData;\n      }\n      resolve(hitDetect(tilePixel, features, hitDetectionImageData));\n    });\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    const context = this.context;\n    const alpha = context.globalAlpha;\n    context.globalAlpha = this.getLayer().getOpacity();\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const tiles =\n      /** @type {Array<import(\"../../VectorRenderTile.js\").default>} */ (\n        this.renderedTiles\n      );\n    for (let i = 0, ii = tiles.length; i < ii; ++i) {\n      const tile = tiles[i];\n      const declutterExecutorGroups =\n        tile.declutterExecutorGroups[getUid(this.getLayer())];\n      if (declutterExecutorGroups) {\n        for (let j = declutterExecutorGroups.length - 1; j >= 0; --j) {\n          declutterExecutorGroups[j].execute(\n            this.context,\n            1,\n            this.getTileRenderTransform(tile, frameState),\n            frameState.viewState.rotation,\n            hifi,\n            undefined,\n            frameState.declutterTree\n          );\n        }\n      }\n    }\n    context.globalAlpha = alpha;\n  }\n\n  getTileRenderTransform(tile, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const rotation = viewState.rotation;\n    const size = frameState.size;\n    const width = Math.round(size[0] * pixelRatio);\n    const height = Math.round(size[1] * pixelRatio);\n\n    const source = this.getLayer().getSource();\n    const tileGrid = source.getTileGridForProjection(\n      frameState.viewState.projection\n    );\n    const tileCoord = tile.tileCoord;\n    const tileExtent = tileGrid.getTileCoordExtent(tile.wrappedTileCoord);\n    const worldOffset =\n      tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent)[0] - tileExtent[0];\n    const transform = multiply(\n      scale(this.inversePixelTransform.slice(), 1 / pixelRatio, 1 / pixelRatio),\n      this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        worldOffset\n      )\n    );\n    return transform;\n  }\n\n  /**\n   * Render the vectors for this layer.\n   * @param {CanvasRenderingContext2D} context Target context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  postRender(context, frameState) {\n    const viewHints = frameState.viewHints;\n    const hifi = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n\n    this.renderedPixelToCoordinateTransform_ =\n      frameState.pixelToCoordinateTransform.slice();\n    this.renderedRotation_ = frameState.viewState.rotation;\n\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const renderMode = layer.getRenderMode();\n    const alpha = context.globalAlpha;\n    context.globalAlpha = layer.getOpacity();\n    const replayTypes = VECTOR_REPLAYS[renderMode];\n    const viewState = frameState.viewState;\n    const rotation = viewState.rotation;\n    const tileSource = layer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n    const z = tileGrid.getZForResolution(\n      viewState.resolution,\n      tileSource.zDirection\n    );\n\n    const tiles = this.renderedTiles;\n    const clips = [];\n    const clipZs = [];\n    let ready = true;\n    for (let i = tiles.length - 1; i >= 0; --i) {\n      const tile = /** @type {import(\"../../VectorRenderTile.js\").default} */ (\n        tiles[i]\n      );\n      ready = ready && !tile.getReplayState(layer).dirty;\n      const executorGroups = tile.executorGroups[getUid(layer)].filter(\n        (group) => group.hasExecutors(replayTypes)\n      );\n      if (executorGroups.length === 0) {\n        continue;\n      }\n      const transform = this.getTileRenderTransform(tile, frameState);\n      const currentZ = tile.tileCoord[0];\n      let contextSaved = false;\n      // Clip mask for regions in this tile that already filled by a higher z tile\n      const currentClip = executorGroups[0].getClipCoords(transform);\n      if (currentClip) {\n        for (let j = 0, jj = clips.length; j < jj; ++j) {\n          if (z !== currentZ && currentZ < clipZs[j]) {\n            const clip = clips[j];\n            if (\n              intersects(\n                [\n                  currentClip[0],\n                  currentClip[3],\n                  currentClip[4],\n                  currentClip[7],\n                ],\n                [clip[0], clip[3], clip[4], clip[7]]\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n      }\n      for (let t = 0, tt = executorGroups.length; t < tt; ++t) {\n        const executorGroup = executorGroups[t];\n        executorGroup.execute(\n          context,\n          1,\n          transform,\n          rotation,\n          hifi,\n          replayTypes\n        );\n      }\n      if (contextSaved) {\n        context.restore();\n      }\n    }\n    context.globalAlpha = alpha;\n    this.ready = ready;\n\n    super.postRender(context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder group for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            undefined,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        undefined,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @return {boolean} A new tile image was rendered.\n   * @private\n   */\n  tileImageNeedsRender_(tile) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    if (layer.getRenderMode() === 'vector') {\n      return false;\n    }\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const resolution = tile.wantedResolution;\n    return (\n      replayState.renderedTileResolution !== resolution ||\n      replayState.renderedTileRevision !== revision\n    );\n  }\n\n  /**\n   * @param {import(\"../../VectorRenderTile.js\").default} tile Tile.\n   * @param {import(\"../../Map\").FrameState} frameState Frame state.\n   * @private\n   */\n  renderTileImage_(tile, frameState) {\n    const layer = /** @type {import(\"../../layer/VectorTile.js\").default} */ (\n      this.getLayer()\n    );\n    const replayState = tile.getReplayState(layer);\n    const revision = layer.getRevision();\n    const executorGroups = tile.executorGroups[getUid(layer)];\n    replayState.renderedTileRevision = revision;\n\n    const tileCoord = tile.wrappedTileCoord;\n    const z = tileCoord[0];\n    const source = layer.getSource();\n    let pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const tileGrid = source.getTileGridForProjection(projection);\n    const tileResolution = tileGrid.getResolution(tile.tileCoord[0]);\n    const renderPixelRatio =\n      (frameState.pixelRatio / tile.wantedResolution) * tileResolution;\n    const resolution = tileGrid.getResolution(z);\n    const context = tile.getContext(layer);\n\n    // Increase tile size when overzooming for low pixel ratio, to avoid blurry tiles\n    pixelRatio = Math.round(\n      Math.max(pixelRatio, renderPixelRatio / pixelRatio)\n    );\n    const size = source.getTilePixelSize(z, pixelRatio, projection);\n    context.canvas.width = size[0];\n    context.canvas.height = size[1];\n    const renderScale = pixelRatio / renderPixelRatio;\n    if (renderScale !== 1) {\n      const canvasTransform = resetTransform(this.tmpTransform_);\n      scaleTransform(canvasTransform, renderScale, renderScale);\n      context.setTransform.apply(context, canvasTransform);\n    }\n    const tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    const pixelScale = renderPixelRatio / resolution;\n    const transform = resetTransform(this.tmpTransform_);\n    scaleTransform(transform, pixelScale, -pixelScale);\n    translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n    for (let i = 0, ii = executorGroups.length; i < ii; ++i) {\n      const executorGroup = executorGroups[i];\n      executorGroup.execute(\n        context,\n        renderScale,\n        transform,\n        0,\n        true,\n        IMAGE_REPLAYS[layer.getRenderMode()]\n      );\n    }\n    replayState.renderedTileResolution = tile.wantedResolution;\n  }\n}\n\nexport default CanvasVectorTileLayerRenderer;\n","/**\n * @module ol/layer/VectorTile\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorTileLayerRenderer from '../renderer/canvas/VectorTileLayer.js';\nimport TileProperty from './TileProperty.js';\nimport {assert} from '../asserts.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} VectorTileLayerOnSignature\n */\n\n/**\n * @typedef {'hybrid' | 'vector'} VectorTileRenderType\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {VectorTileRenderType} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Everything is rendered as vectors. Use this mode for improved performance on vector\n *    tile layers with only a few rendered features (e.g. for highlighting a subset of features of\n *    another layer with the same source).\n * @property {import(\"../source/VectorTile.js\").default} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor|false} [background] Background color for the layer. If not specified, no\n * background will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {Options} [options] Options.\n * @extends {BaseVectorLayer<import(\"../source/VectorTile.js\").default, CanvasVectorTileLayerRenderer>}\n * @api\n */\nclass VectorTileLayer extends BaseVectorLayer {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = /** @type {Object} */ (Object.assign({}, options));\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n\n    super(\n      /** @type {import(\"./BaseVector.js\").Options<import(\"../source/VectorTile.js\").default>} */ (\n        baseOptions\n      )\n    );\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    const renderMode = options.renderMode || 'hybrid';\n    assert(\n      renderMode == 'hybrid' || renderMode == 'vector',\n      \"`renderMode` must be `'hybrid'` or `'vector'`\"\n    );\n\n    /**\n     * @private\n     * @type {VectorTileRenderType}\n     */\n    this.renderMode_ = renderMode;\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n\n    /**\n     * @return {import(\"./Base.js\").BackgroundColor} Background color.\n     * @function\n     * @api\n     */\n    this.getBackground;\n\n    /**\n     * @param {import(\"./Base.js\").BackgroundColor} background Background color.\n     * @function\n     * @api\n     */\n    this.setBackground;\n  }\n\n  createRenderer() {\n    return new CanvasVectorTileLayerRenderer(this);\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {VectorTileRenderType} The render mode.\n   */\n  getRenderMode() {\n    return this.renderMode_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\nexport default VectorTileLayer;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`'\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n"],"names":["module","exports","t","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","max","floor","min","p","d","x","i","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","m","c","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","asColorLike","color","Array","isArray","taintedTestContext","IconImage","constructor","image","src","crossOrigin","imageState","super","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","undefined","ImageState","IDLE","size_","width","src_","tainted_","initializeImage_","Image","isTainted_","LOADED","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","dispatchEvent","EventType","CHANGE","handleImageError_","ERROR","handleImageLoad_","getImage","pixelRatio","replaceColor_","getPixelRatio","getImageState","getHitDetectionImage","context","fillRect","canvas","getSize","getSrc","LOADING","HTMLImageElement","then","catch","bind","document","createElement","ctx","getContext","scale","globalCompositeOperation","fillStyle","calculateScale","wantedWidth","wantedHeight","Icon","options","opacity","rotation","rotateWithView","displacement","declutterMode","anchor_","anchor","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","cacheKey","complete","iconImage_","iconImage","get","set","offset_","offset","offsetOrigin_","offsetOrigin","origin_","size","initialOptions_","onload","unlistenImageChange","imageSize","setScale","listenImageChange","clone","getScale","getOpacity","getRotateWithView","getRotation","getDisplacement","getDeclutterMode","getAnchor","getScaleArray","setAnchor","getColor","getImageSize","getOrigin","iconImageSize","getWidth","getHeight","listener","addEventListener","removeEventListener","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","AnyType","typeNames","namedTypes","Object","keys","map","Number","typeName","type","names","namedType","specific","join","overlapsType","oneType","otherType","isType","expected","LiteralExpression","value","CallExpression","operator","args","newParsingContext","variables","Set","properties","featureId","style","parse","encoded","typeHint","Error","parser","parsers","parseCallExpression","item","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Case","In","String","Color","Id","Band","Palette","createParser","_","getTypeFromHint","withArgsCount","arg","add","firstArg","parsedArgs","varName","withNoArgs","Infinity","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","match","output","expectedInputType","JSON","stringify","interpolationType","interpolation","input","stop","operation","argCount","condition","haystack","needleType","index","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","buildExpression","actual","compileExpression","colorValue","compileAssertionExpression","name","compileAccessorExpression","concat","toString","resolution","op","compileLogicalExpression","left","right","compileComparisonExpression","abs","round","sin","cos","atan2","atan","compileNumericExpression","compileMatchExpression","base","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","input1","output1","input2","output2","delta","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lcha","always","flatStylesToStyleFunction","flatStyles","parsingContext","evaluators","buildStyle","evaluationContext","NaN","styles","feature","getPropertiesInternal","id","getId","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","text","Text","setText","setFill","setBackgroundFill","setStroke","setBackgroundStroke","setFont","setMaxAngle","setOffsetX","setOffsetY","setOverflow","placement","setPlacement","setRepeat","setRotateWithView","setRotation","textAlign","setTextAlign","justify","setJustify","textBaseline","setTextBaseline","setPadding","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","property","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","optionalDeclutterMode","icon","setOpacity","setDisplacement","buildIcon","pointsName","points","requireNumber","radius","radius1","radius2","angle","shape","RegularShape","buildShape","evaluateRadius","circle","Circle","setRadius","buildCircle","buildImage","evaluateZIndex","Style","empty","fill","stroke","setImage","setZIndex","evaluateColor","colorLikeEvaluator","Fill","setColor","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","Stroke","setWidth","lineCap","setLineCap","lineJoin","setLineJoin","setLineDash","setLineDashOffset","setMiterLimit","evaluator","array","requireSizeLike","Property","BaseVectorLayer","Layer","baseOptions","assign","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","pixel","getRenderBuffer","getRenderOrder","getStyle","getStyleFunction","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","frameState","declutterTree","getRenderer","setRenderOrder","renderOrder","first","candidate","rules","compiledRules","rule","filter","styleLength","j","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","rulesToStyleFunction","toStyleLike","changed","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","geometry","renderer","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","tolerance","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinates","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","ii","appendFlatLineCoordinates","end","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","Relationship","INTERSECTING","drawCustomCoordinates_","ends","builderEnds","builderEnd","beginGeometry","getType","getStride","builderBegin","builderEndss","getOrientedFlatCoordinates","endss","getEndss","myEnds","inflate","getFlatCoordinates","getEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","begin","fillStyleColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","lineDash","strokeStyleLineDashOffset","getLineDashOffset","lineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","lineWidth","strokeStyleMiterLimit","getMiterLimit","miterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","x1","y1","x2","y2","segmentLength","y","missing","matchingChunk","maxAngle","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","start","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","rotateWithView_","rotation_","scale_","width_","declutterMode_","declutterImageWithText_","sharedData","origin","drawFlatCoordinates_","lastStroke","labels_","text_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","overflow","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg","w","keep","saveTextStates_","backgroundFill","backgroundStroke","padding","p0","p1","p2","p3","getExtent","repeat","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","font","fillKey","baseline","offsetY","strokeWidth","textFillStyle","getFill","textStrokeStyle","getStroke","getFont","textScale","getOverflow","getMaxAngle","getPlacement","getTextAlign","getRepeat","getJustify","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","getText","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","endX","endY","flat","PI","result","singleSegment","previousAngle","replace","iStart","charLength","len","chars","substring","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","fromCharCode","horizontalTextAlign","align","test","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","key","textIsArray","split","reduce","widths","heights","lineWidths","renderWidth","contextInstructions","label","leftRight","strokeInstructions","fillInstructions","previousFont","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","beginPath","moveTo","lineTo","fill_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","transform","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","strokePadding","repeatSize","save","translate","rotate","restore","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","getGeometry","dx","dy","arc","closePath","fn","coords","labelWithAnchor","widthIndex","imageArgs","imageDeclutterBox","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","clearRect","indexes","maxDistanceSq","distances","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","includes","idx","zs","executor","isEmpty","builderTypes","jj","squaredTolerance","userTransform","context_","extent_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","globalAlpha","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simplifyTransformed","setTransform","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","imageBuilderGroup","imageReplay","getZIndex","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","getSquaredTolerance","getTolerance","renderFeature","loading","simplifiedGeometry","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","getGeometries","IMAGE_REPLAYS","VECTOR_REPLAYS","CanvasVectorTileLayerRenderer","layer","boundHandleStyleImageChange_","handleStyleImageChange_","renderedLayerRevision_","renderedPixelToCoordinateTransform_","renderedRotation_","tmpTransform_","prepareTile","tile","projection","render","getState","TileState","updateExecutorGroup_","tileImageNeedsRender_","getTile","z","viewState","getLayer","getSource","viewHints","hifi","ViewHint","ANIMATING","INTERACTING","wantedResolution","Date","now","time","getRenderMode","renderTileImage_","isDrawableTile","executorGroups","hasContext","getTileImage","prepareFrame","layerRevision","getRevision","renderedTiles","revision","builderState","getReplayState","dirty","renderedResolution","renderedRevision","renderedRenderOrder","source","sourceTileGrid","getTileGrid","tileExtent","getTileGridForProjection","getTileCoordExtent","wrappedTileCoord","sourceTiles","getSourceTiles","layerUid","hitDetectionImageData","declutterExecutorGroups","tt","sourceTile","sourceTileCoord","tileCoord","sourceTileExtent","sharedExtent","builderExtent","bufferedExtent","styleFunction","features","executorGroupInstructions","replayExtent","renderingReplayGroup","getOverlaps","declutterExecutorGroup","matches","tileGrid","lastIndexOf","found","some","executorGroup","Promise","resolve","reject","renderedProjection","projectionExtent","getTileCoordForCoordAndResolution","getWrapX","canWrapX","loadingSourceTiles","corner","tilePixel","accumulator","tileSize","getTileSize","getZForResolution","zDirection","transforms","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","k","kk","createHitDetectionImageData","getRenderTransform","getTileCoordCenter","resultFeatures","g","hitDetect","handleFontsChanged","getVisible","event","renderIfReadyAndVisible","tiles","getTileRenderTransform","center","worldOffset","inversePixelTransform","postRender","pixelToCoordinateTransform","renderMode","replayTypes","tileSource","clips","clipZs","ready","group","currentZ","contextSaved","currentClip","replayState","renderedTileResolution","renderedTileRevision","tileResolution","getResolution","renderPixelRatio","getTilePixelSize","renderScale","pixelScale","BaseVector","preload","useInterimTilesOnError","on","once","un","renderMode_","setPreload","setUseInterimTilesOnError","getBackground","setBackground","createRenderer","getPreload","TileProperty","PRELOAD","getUseInterimTilesOnError","USE_INTERIM_TILES_ON_ERROR","CircleStyle","getRadius","radius_","ImageStyle","scaleArray_","displacement_","canvases_","hitDetectionCanvas_","points_","radius2_","angle_","stroke_","renderOptions_","getPoints","getRadius2","getAngle","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","tmp","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","step","angle0","radiusC","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","geometry_","geometryFunction_","defaultGeometryFunction","setGeometry","renderer_","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","toFunction","obj","defaultStyles","createDefaultStyle","font_","textAlign_","justify_","repeat_","textBaseline_","maxAngle_","placement_","overflow_","offsetX_","offsetX","offsetY_","backgroundFill_","backgroundStroke_","padding_"],"sourceRoot":""}